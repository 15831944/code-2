using System;
using System.Collections.Generic;
using System.Text;

namespace AP_C 
{
    class OITM : B1iSN 
    {
        public string ItemCode = "ItemCode";
        public string ItemName = "ItemName";
        public string FrgnName = "ForeignName";
        public string ItmsGrpCod = "ItemsGroupCode";
        public string CstGrpCode = "CustomsGroupCode";
        public string VatGourpSa = "SalesVATGroup";
        public string CodeBars = "BarCode";
        public string VATLiable = "VatLiable";
        public string PrchseItem = "PurchaseItem";
        public string SellItem = "SalesItem";
        public string InvntItem = "InventoryItem";
        public string IncomeAcct = "IncomeAccount";
        public string ExmptIncom = "ExemptIncomeAccount";
        public string ExpensAcct = "ExpanseAccount";
        public string CardCode = "Mainsupplier";
        public string SuppCatNum = "SupplierCatalogNo";
        public string ReorderQty = "DesiredInventory";
        public string MinLevel = "MinInventory";
        public string PicturName = "Picture";
        public string UserText = "User_Text";
        public string SerialNum = "SerialNum";
        public string CommisPcnt = "CommissionPercent";
        public string CommisSum = "CommissionSum";
        public string CommisGrp = "CommissionGroup";
        public string TreeType = "TreeType";
        public string AssetItem = "AssetItem";
        public string ExportCode = "DataExportCode";
        public string FirmCode = "Manufacturer";
        public string ManSerNum = "ManageSerialNumbers";
        public string ManBtchNum = "ManageBatchNumbers";
        public string validFor = "Valid";
        public string validFrom = "ValidFrom";
        public string validTo = "ValidTo";
        public string ValidComm = "ValidRemarks";
        public string frozenFor = "Frozen";
        public string frozenFrom = "FrozenFrom";
        public string frozenTo = "FrozenTo";
        public string FrozenComm = "FrozenRemarks";
        public string SalUnitMsr = "SalesUnit";
        public string NumInSale = "SalesItemsPerUnit";
        public string SalPackMsr = "SalesPackagingUnit";
        public string SalPackUn = "SalesQtyPerPackUnit";
        public string SLength1 = "SalesUnitLength";
        public string SLen1Unit = "SalesLengthUnit";
        public string SWidth1 = "SalesUnitWidth";
        public string SWdth1Unit = "SalesWidthUnit";
        public string SHeight1 = "SalesUnitHeight";
        public string SHght1Unit = "SalesHeightUnit";
        public string SVolume = "SalesUnitVolume";
        public string SVolUnit = "SalesVolumeUnit";
        public string SWeight1 = "SalesUnitWeight";
        public string SWght1Unit = "SalesWeightUnit";
        public string BuyUnitMsr = "PurchaseUnit";
        public string NumInBuy = "PurchaseItemsPerUnit";
        public string PurPackMsr = "PurchasePackagingUnit";
        public string PurPackUn = "PurchaseQtyPerPackUnit";
        public string BLength1 = "PurchaseUnitLength";
        public string BLen1Unit = "PurchaseLengthUnit";
        public string BWidth1 = "PurchaseUnitWidth";
        public string BWdth1Unit = "PurchaseWidthUnit";
        public string BHeight1 = "PurchaseUnitHeight";
        public string BHght1Unit = "PurchaseHeightUnit";
        public string BVolume = "PurchaseUnitVolume";
        public string BVolUnit = "PurchaseVolumeUnit";
        public string BWeight1 = "PurchaseUnitWeight";
        public string BWght1Unit = "PurchaseWeightUnit";
        public string VatGroupPu = "PurchaseVATGroup";
        public string SalFactor1 = "SalesFactor1";
        public string SalFactor2 = "SalesFactor2";
        public string SalFactor3 = "SalesFactor3";
        public string SalFactor4 = "SalesFactor4";
        public string PurFactor1 = "PurchaseFactor1";
        public string PurFactor2 = "PurchaseFactor2";
        public string PurFactor3 = "PurchaseFactor3";
        public string PurFactor4 = "PurchaseFactor4";
        public string FrgnInAcct = "ForeignRevenuesAccount";
        public string ECInAcct = "ECRevenuesAccount";
        public string FrgnExpAcc = "ForeignExpensesAccount";
        public string ECExpAcc = "ECExpensesAccount";
        public string AvgPrice = "AvgStdPrice";
        public string DfltWH = "DefaultWarehouse";
        public string ShipType = "ShipType";
        public string GLMethod = "GLMethod";
        public string TaxType = "TaxType";
        public string MaxLevel = "MaxInventory";
        public string ByWh = "ManageStockByWarehouse";
        public string BHght2Unit = "PurchaseHeightUnit1";
        public string BHeight2 = "PurchaseUnitHeight1";
        public string BLen2Unit = "PurchaseLengthUnit1";
        public string Blength2 = "PurchaseUnitLength1";
        public string BWght2Unit = "PurchaseWeightUnit1";
        public string BWeight2 = "PurchaseUnitWeight1";
        public string BWdth2Unit = "PurchaseWidthUnit1";
        public string BWidth2 = "PurchaseUnitWidth1";
        public string SHght2Unit = "SalesHeightUnit1";
        public string SHeight2 = "SalesUnitHeight1";
        public string SLen2Unit = "SalesLengthUnit1";
        public string Slength2 = "SalesUnitLength1";
        public string SWght2Unit = "SalesWeightUnit1";
        public string SWeight2 = "SalesUnitWeight1";
        public string SWdth2Unit = "SalesWidthUnit1";
        public string SWidth2 = "SalesUnitWidth1";
        public string BlockOut = "ForceSelectionOfSerialNumber";
        //public string ManOutOnly = "ManageSerialNumbersOnReleaseOnly";
        //public string ManOutOnly = "AutoCreateSerialNumbersOnRelease";
        public string WTLiable = "WTLiable";
        public string EvalSystem = "CostAccountingMethod";
        public string SWW = "SWW";
        public string WarrntTmpl = "WarrantyTemplate";
        public string IndirctTax = "IndirectTax";
        public string TaxCodeAR = "ArTaxCode";
        public string TaxCodeAP = "ApTaxCode";
        public string BaseUnit = "BaseUnitName";
        public string CountryOrg = "ItemCountryOrg";
        public string IssueMthd = "IssueMethod";
        public string MngMethod = "SRIAndBatchManageMethod";
        public string Phantom = "IsPhantom";
        public string InvntryUom = "InventoryUOM";
        public string PlaningSys = "PlanningSystem";
        public string PrcrmntMtd = "ProcurementMethod";
        public string OrdrIntrvl = "OrderIntervals";
        public string OrdrMulti = "OrderMultiple";
        public string LeadTime = "LeadTime";
        public string MinOrdrQty = "MinOrderQuantity";
        public string ItemType = "ItemType";
        public string ItemClass = "ItemClass";
        public string OSvcCode = "OutgoingServiceCode";
        public string ISvcCode = "IncomingServiceCode";
        public string ServiceGrp = "ServiceGroup";
        public string NCMCode = "NCMCode";
        public string MatType = "MaterialType";
        public string MatGrp = "MaterialGroup";
        public string ProductSrc = "ProductSource";
        public string QryGroup1 = "Properties1";
        public string QryGroup2 = "Properties2";
        public string QryGroup3 = "Properties3";
        public string QryGroup4 = "Properties4";
        public string QryGroup5 = "Properties5";
        public string QryGroup6 = "Properties6";
        public string QryGroup7 = "Properties7";
        public string QryGroup8 = "Properties8";
        public string QryGroup9 = "Properties9";
        public string QryGroup10 = "Properties10";
        public string QryGroup11 = "Properties11";
        public string QryGroup12 = "Properties12";
        public string QryGroup13 = "Properties13";
        public string QryGroup14 = "Properties14";
        public string QryGroup15 = "Properties15";
        public string QryGroup16 = "Properties16";
        public string QryGroup17 = "Properties17";
        public string QryGroup18 = "Properties18";
        public string QryGroup19 = "Properties19";
        public string QryGroup20 = "Properties20";
        public string QryGroup21 = "Properties21";
        public string QryGroup22 = "Properties22";
        public string QryGroup23 = "Properties23";
        public string QryGroup24 = "Properties24";
        public string QryGroup25 = "Properties25";
        public string QryGroup26 = "Properties26";
        public string QryGroup27 = "Properties27";
        public string QryGroup28 = "Properties28";
        public string QryGroup29 = "Properties29";
        public string QryGroup30 = "Properties30";
        public string QryGroup31 = "Properties31";
        public string QryGroup32 = "Properties32";
        public string QryGroup33 = "Properties33";
        public string QryGroup34 = "Properties34";
        public string QryGroup35 = "Properties35";
        public string QryGroup36 = "Properties36";
        public string QryGroup37 = "Properties37";
        public string QryGroup38 = "Properties38";
        public string QryGroup39 = "Properties39";
        public string QryGroup40 = "Properties40";
        public string QryGroup41 = "Properties41";
        public string QryGroup42 = "Properties42";
        public string QryGroup43 = "Properties43";
        public string QryGroup44 = "Properties44";
        public string QryGroup45 = "Properties45";
        public string QryGroup46 = "Properties46";
        public string QryGroup47 = "Properties47";
        public string QryGroup48 = "Properties48";
        public string QryGroup49 = "Properties49";
        public string QryGroup50 = "Properties50";
        public string QryGroup51 = "Properties51";
        public string QryGroup52 = "Properties52";
        public string QryGroup53 = "Properties53";
        public string QryGroup54 = "Properties54";
        public string QryGroup55 = "Properties55";
        public string QryGroup56 = "Properties56";
        public string QryGroup57 = "Properties57";
        public string QryGroup58 = "Properties58";
        public string QryGroup59 = "Properties59";
        public string QryGroup60 = "Properties60";
        public string QryGroup61 = "Properties61";
        public string QryGroup62 = "Properties62";
        public string QryGroup63 = "Properties63";
        public string QryGroup64 = "Properties64";
        
        public string DNFEntry = "DNFEntry";
        public string Spec = "GTSItemSpec";
        public string TaxCtg = "GTSItemTaxCategory";




        public override void Rlp(ref string tmp)
        {
            tmp = Trans(tmp, "ItemCode", ItemCode);
            tmp = Trans(tmp, "ItemName", ItemName);
            tmp = Trans(tmp, "FrgnName", FrgnName);
            tmp = Trans(tmp, "ItmsGrpCod", ItmsGrpCod);
            tmp = Trans(tmp, "CstGrpCode", CstGrpCode);
            tmp = Trans(tmp, "VatGourpSa", VatGourpSa);
            tmp = Trans(tmp, "CodeBars", CodeBars);
            tmp = Trans(tmp, "VATLiable", VATLiable);
            tmp = Trans(tmp, "PrchseItem", PrchseItem);
            tmp = Trans(tmp, "SellItem", SellItem);
            tmp = Trans(tmp, "InvntItem", InvntItem);
            tmp = Trans(tmp, "IncomeAcct", IncomeAcct);
            tmp = Trans(tmp, "ExmptIncom", ExmptIncom);
            tmp = Trans(tmp, "ExpensAcct", ExpensAcct);
            tmp = Trans(tmp, "CardCode", CardCode);
            tmp = Trans(tmp, "SuppCatNum", SuppCatNum);
            tmp = Trans(tmp, "ReorderQty", ReorderQty);
            tmp = Trans(tmp, "MinLevel", MinLevel);
            tmp = Trans(tmp, "PicturName", PicturName);
            tmp = Trans(tmp, "UserText", UserText);
            tmp = Trans(tmp, "SerialNum", SerialNum);
            tmp = Trans(tmp, "CommisPcnt", CommisPcnt);
            tmp = Trans(tmp, "CommisSum", CommisSum);
            tmp = Trans(tmp, "CommisGrp", CommisGrp);
            tmp = Trans(tmp, "TreeType", TreeType);
            tmp = Trans(tmp, "AssetItem", AssetItem);
            tmp = Trans(tmp, "ExportCode", ExportCode);
            tmp = Trans(tmp, "FirmCode", FirmCode);
            tmp = Trans(tmp, "ManSerNum", ManSerNum);
            tmp = Trans(tmp, "ManBtchNum", ManBtchNum);
            tmp = Trans(tmp, "validFor", validFor);
            tmp = Trans(tmp, "validFrom", validFrom);
            tmp = Trans(tmp, "validTo", validTo);
            tmp = Trans(tmp, "ValidComm", ValidComm);
            tmp = Trans(tmp, "frozenFor", frozenFor);
            tmp = Trans(tmp, "frozenFrom", frozenFrom);
            tmp = Trans(tmp, "frozenTo", frozenTo);
            tmp = Trans(tmp, "FrozenComm", FrozenComm);
            tmp = Trans(tmp, "SalUnitMsr", SalUnitMsr);
            tmp = Trans(tmp, "NumInSale", NumInSale);
            tmp = Trans(tmp, "SalPackMsr", SalPackMsr);
            tmp = Trans(tmp, "SalPackUn", SalPackUn);
            tmp = Trans(tmp, "SLength1", SLength1);
            tmp = Trans(tmp, "SLen1Unit", SLen1Unit);
            tmp = Trans(tmp, "SWidth1", SWidth1);
            tmp = Trans(tmp, "SWdth1Unit", SWdth1Unit);
            tmp = Trans(tmp, "SHeight1", SHeight1);
            tmp = Trans(tmp, "SHght1Unit", SHght1Unit);
            tmp = Trans(tmp, "SVolume", SVolume);
            tmp = Trans(tmp, "SVolUnit", SVolUnit);
            tmp = Trans(tmp, "SWeight1", SWeight1);
            tmp = Trans(tmp, "SWght1Unit", SWght1Unit);
            tmp = Trans(tmp, "BuyUnitMsr", BuyUnitMsr);
            tmp = Trans(tmp, "NumInBuy", NumInBuy);
            tmp = Trans(tmp, "PurPackMsr", PurPackMsr);
            tmp = Trans(tmp, "PurPackUn", PurPackUn);
            tmp = Trans(tmp, "BLength1", BLength1);
            tmp = Trans(tmp, "BLen1Unit", BLen1Unit);
            tmp = Trans(tmp, "BWidth1", BWidth1);
            tmp = Trans(tmp, "BWdth1Unit", BWdth1Unit);
            tmp = Trans(tmp, "BHeight1", BHeight1);
            tmp = Trans(tmp, "BHght1Unit", BHght1Unit);
            tmp = Trans(tmp, "BVolume", BVolume);
            tmp = Trans(tmp, "BVolUnit", BVolUnit);
            tmp = Trans(tmp, "BWeight1", BWeight1);
            tmp = Trans(tmp, "BWght1Unit", BWght1Unit);
            tmp = Trans(tmp, "VatGroupPu", VatGroupPu);
            tmp = Trans(tmp, "SalFactor1", SalFactor1);
            tmp = Trans(tmp, "SalFactor2", SalFactor2);
            tmp = Trans(tmp, "SalFactor3", SalFactor3);
            tmp = Trans(tmp, "SalFactor4", SalFactor4);
            tmp = Trans(tmp, "PurFactor1", PurFactor1);
            tmp = Trans(tmp, "PurFactor2", PurFactor2);
            tmp = Trans(tmp, "PurFactor3", PurFactor3);
            tmp = Trans(tmp, "PurFactor4", PurFactor4);
            tmp = Trans(tmp, "FrgnInAcct", FrgnInAcct);
            tmp = Trans(tmp, "ECInAcct", ECInAcct);
            tmp = Trans(tmp, "FrgnExpAcc", FrgnExpAcc);
            tmp = Trans(tmp, "ECExpAcc", ECExpAcc);
            tmp = Trans(tmp, "AvgPrice", AvgPrice);
            tmp = Trans(tmp, "DfltWH", DfltWH);
            tmp = Trans(tmp, "ShipType", ShipType);
            tmp = Trans(tmp, "GLMethod", GLMethod);
            tmp = Trans(tmp, "TaxType", TaxType);
            tmp = Trans(tmp, "MaxLevel", MaxLevel);
            tmp = Trans(tmp, "ByWh", ByWh);
            tmp = Trans(tmp, "BHght2Unit", BHght2Unit);
            tmp = Trans(tmp, "BHeight2", BHeight2);
            tmp = Trans(tmp, "BLen2Unit", BLen2Unit);
            tmp = Trans(tmp, "Blength2", Blength2);
            tmp = Trans(tmp, "BWght2Unit", BWght2Unit);
            tmp = Trans(tmp, "BWeight2", BWeight2);
            tmp = Trans(tmp, "BWdth2Unit", BWdth2Unit);
            tmp = Trans(tmp, "BWidth2", BWidth2);
            tmp = Trans(tmp, "SHght2Unit", SHght2Unit);
            tmp = Trans(tmp, "SHeight2", SHeight2);
            tmp = Trans(tmp, "SLen2Unit", SLen2Unit);
            tmp = Trans(tmp, "Slength2", Slength2);
            tmp = Trans(tmp, "SWght2Unit", SWght2Unit);
            tmp = Trans(tmp, "SWeight2", SWeight2);
            tmp = Trans(tmp, "SWdth2Unit", SWdth2Unit);
            tmp = Trans(tmp, "SWidth2", SWidth2);
            tmp = Trans(tmp, "BlockOut", BlockOut);
            
            //tmp = Trans(tmp, "ManOutOnly", ManOutOnly);
            //tmp = Trans(tmp, "ManOutOnly", ManOutOnly);

            tmp = Trans(tmp, "WTLiable", WTLiable);
            tmp = Trans(tmp, "EvalSystem", EvalSystem);
            tmp = Trans(tmp, "SWW", SWW);
            tmp = Trans(tmp, "WarrntTmpl", WarrntTmpl);
            tmp = Trans(tmp, "IndirctTax", IndirctTax);
            tmp = Trans(tmp, "TaxCodeAR", TaxCodeAR);
            tmp = Trans(tmp, "TaxCodeAP", TaxCodeAP);
            tmp = Trans(tmp, "BaseUnit", BaseUnit);
            tmp = Trans(tmp, "CountryOrg", CountryOrg);
            tmp = Trans(tmp, "IssueMthd", IssueMthd);
            tmp = Trans(tmp, "MngMethod", MngMethod);
            tmp = Trans(tmp, "Phantom", Phantom);
            tmp = Trans(tmp, "InvntryUom", InvntryUom);
            tmp = Trans(tmp, "PlaningSys", PlaningSys);
            tmp = Trans(tmp, "PrcrmntMtd", PrcrmntMtd);
            tmp = Trans(tmp, "OrdrIntrvl", OrdrIntrvl);
            tmp = Trans(tmp, "OrdrMulti", OrdrMulti);
            tmp = Trans(tmp, "LeadTime", LeadTime);
            tmp = Trans(tmp, "MinOrdrQty", MinOrdrQty);
            tmp = Trans(tmp, "ItemType", ItemType);
            tmp = Trans(tmp, "ItemClass", ItemClass);
            tmp = Trans(tmp, "OSvcCode", OSvcCode);
            tmp = Trans(tmp, "ISvcCode", ISvcCode);
            tmp = Trans(tmp, "ServiceGrp", ServiceGrp);
            tmp = Trans(tmp, "NCMCode", NCMCode);
            tmp = Trans(tmp, "MatType", MatType);
            tmp = Trans(tmp, "MatGrp", MatGrp);
            tmp = Trans(tmp, "ProductSrc", ProductSrc);
            tmp = Trans(tmp, "QryGroup1", QryGroup1);
            tmp = Trans(tmp, "QryGroup2", QryGroup2);
            tmp = Trans(tmp, "QryGroup3", QryGroup3);
            tmp = Trans(tmp, "QryGroup4", QryGroup4);
            tmp = Trans(tmp, "QryGroup5", QryGroup5);
            tmp = Trans(tmp, "QryGroup6", QryGroup6);
            tmp = Trans(tmp, "QryGroup7", QryGroup7);
            tmp = Trans(tmp, "QryGroup8", QryGroup8);
            tmp = Trans(tmp, "QryGroup9", QryGroup9);
            tmp = Trans(tmp, "QryGroup10", QryGroup10);
            tmp = Trans(tmp, "QryGroup11", QryGroup11);
            tmp = Trans(tmp, "QryGroup12", QryGroup12);
            tmp = Trans(tmp, "QryGroup13", QryGroup13);
            tmp = Trans(tmp, "QryGroup14", QryGroup14);
            tmp = Trans(tmp, "QryGroup15", QryGroup15);
            tmp = Trans(tmp, "QryGroup16", QryGroup16);
            tmp = Trans(tmp, "QryGroup17", QryGroup17);
            tmp = Trans(tmp, "QryGroup18", QryGroup18);
            tmp = Trans(tmp, "QryGroup19", QryGroup19);
            tmp = Trans(tmp, "QryGroup20", QryGroup20);
            tmp = Trans(tmp, "QryGroup21", QryGroup21);
            tmp = Trans(tmp, "QryGroup22", QryGroup22);
            tmp = Trans(tmp, "QryGroup23", QryGroup23);
            tmp = Trans(tmp, "QryGroup24", QryGroup24);
            tmp = Trans(tmp, "QryGroup25", QryGroup25);
            tmp = Trans(tmp, "QryGroup26", QryGroup26);
            tmp = Trans(tmp, "QryGroup27", QryGroup27);
            tmp = Trans(tmp, "QryGroup28", QryGroup28);
            tmp = Trans(tmp, "QryGroup29", QryGroup29);
            tmp = Trans(tmp, "QryGroup30", QryGroup30);
            tmp = Trans(tmp, "QryGroup31", QryGroup31);
            tmp = Trans(tmp, "QryGroup32", QryGroup32);
            tmp = Trans(tmp, "QryGroup33", QryGroup33);
            tmp = Trans(tmp, "QryGroup34", QryGroup34);
            tmp = Trans(tmp, "QryGroup35", QryGroup35);
            tmp = Trans(tmp, "QryGroup36", QryGroup36);
            tmp = Trans(tmp, "QryGroup37", QryGroup37);
            tmp = Trans(tmp, "QryGroup38", QryGroup38);
            tmp = Trans(tmp, "QryGroup39", QryGroup39);
            tmp = Trans(tmp, "QryGroup40", QryGroup40);
            tmp = Trans(tmp, "QryGroup41", QryGroup41);
            tmp = Trans(tmp, "QryGroup42", QryGroup42);
            tmp = Trans(tmp, "QryGroup43", QryGroup43);
            tmp = Trans(tmp, "QryGroup44", QryGroup44);
            tmp = Trans(tmp, "QryGroup45", QryGroup45);
            tmp = Trans(tmp, "QryGroup46", QryGroup46);
            tmp = Trans(tmp, "QryGroup47", QryGroup47);
            tmp = Trans(tmp, "QryGroup48", QryGroup48);
            tmp = Trans(tmp, "QryGroup49", QryGroup49);
            tmp = Trans(tmp, "QryGroup50", QryGroup50);
            tmp = Trans(tmp, "QryGroup51", QryGroup51);
            tmp = Trans(tmp, "QryGroup52", QryGroup52);
            tmp = Trans(tmp, "QryGroup53", QryGroup53);
            tmp = Trans(tmp, "QryGroup54", QryGroup54);
            tmp = Trans(tmp, "QryGroup55", QryGroup55);
            tmp = Trans(tmp, "QryGroup56", QryGroup56);
            tmp = Trans(tmp, "QryGroup57", QryGroup57);
            tmp = Trans(tmp, "QryGroup58", QryGroup58);
            tmp = Trans(tmp, "QryGroup59", QryGroup59);
            tmp = Trans(tmp, "QryGroup60", QryGroup60);
            tmp = Trans(tmp, "QryGroup61", QryGroup61);
            tmp = Trans(tmp, "QryGroup62", QryGroup62);
            tmp = Trans(tmp, "QryGroup63", QryGroup63);
            tmp = Trans(tmp, "QryGroup64", QryGroup64);
            
            tmp = Trans(tmp, "DNFEntry", DNFEntry);
            tmp = Trans(tmp, "Spec", Spec);
            tmp = Trans(tmp, "TaxCtg", TaxCtg);

        }
    }
}
