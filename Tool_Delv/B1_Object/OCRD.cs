using System;
using System.Collections.Generic;
using System.Text;

namespace AP_C 
{
    class OCRD:B1iSN 
    {
        public string CardCode = "CardCode";
        public string CardName = "CardName";
        public string CardType = "CardType";
        public string GroupCode = "GroupCode";
        public string Address = "Address";
        public string ZipCode = "ZipCode";
        public string MailAddres = "MailAddress";
        public string MailZipCod = "MailZipCode";
        public string Phone1 = "Phone1";
        public string Phone2 = "Phone2";
        public string Fax = "Fax";
        public string CntctPrsn = "ContactPerson";
        public string Notes = "Notes";
        public string GroupNum = "PayTermsGrpCode";
        public string CreditLine = "CreditLimit";
        public string DebtLine = "MaxCommitment";
        public string Discount = "DiscountPercent";
        public string VatStatus = "VatLiable";
        public string LicTradNum = "FederalTaxID";
        public string DdctStatus = "DeductibleAtSource";
        public string DdctPrcnt = "DeductionPercent";
        public string ValidUntil = "DeductionValidUntil";
        public string ListNum = "PriceListNum";
        public string IntrstRate = "IntrestRatePercent";
        public string Commission = "CommissionPercent";
        public string CommGrCode = "CommissionGroupCode";
        public string Free_Text = "FreeText";
        public string SlpCode = "SalesPersonCode";
        public string Currency = "Currency";
        public string RateDifAct = "RateDiffAccount";
        public string Cellular = "Cellular";
        public string AvrageLate = "AvarageLate";
        public string City = "City";
        public string County = "County";
        public string Country = "Country";
        public string MailCity = "MailCity";
        public string MailCounty = "MailCounty";
        public string MailCountr = "MailCountry";
        public string E_Mail = "EmailAddress";
        public string Picture = "Picture";
        public string DflAccount = "DefaultAccount";
        public string DflBranch = "DefaultBranch";
        public string BankCode = "DefaultBankCode";
        public string AddID = "AdditionalID";
        public string Pager = "Pager";
        public string FatherCard = "FatherCard";
        public string CardFName = "CardForeignName";
        public string FatherType = "FatherType";
        public string DdctOffice = "DeductionOffice";
        public string ExportCode = "ExportCode";
        public string MinIntrst = "MinIntrest";
        public string ECVatGroup = "VatGroup";
        public string ShipType = "ShippingType";
        public string Password = "Password";
        public string Indicator = "Indicator";
        public string IBAN = "IBAN";
        public string CreditCard = "CreditCardCode";
        public string CrCardNum = "CreditCardNum";
        public string CardValid = "CreditCardExpiration";
        public string DebPayAcct = "DebitorAccount";
        public string validFor = "Valid";
        public string validFrom = "ValidFrom";
        public string validTo = "ValidTo";
        public string ValidComm = "ValidRemarks";
        public string frozenFor = "Frozen";
        public string frozenFrom = "FrozenFrom";
        public string frozenTo = "FrozenTo";
        public string FrozenComm = "FrozenRemarks";
        public string Block = "Block";
        public string State1 = "BillToState";
        public string ExemptNo = "ExemptNum";
        public string Priority = "Priority";
        public string FormCode = "FormCode1099";
        public string Box1099 = "Box1099";
        public string PymCode = "PeymentMethodCode";
        public string BackOrder = "BackOrder";
        public string PartDelivr = "PartialDelivery";
        public string BlockDunn = "BlockDunning";
        public string BankCountr = "BankCountry";
        public string HouseBank = "HouseBank";
        public string HousBnkCry = "HouseBankCountry";
        public string HousBnkAct = "HouseBankAccount";
        public string ShipToDef = "ShipToDefault";
        public string CollecAuth = "CollectionAuthorization";
        public string DME = "DME";
        public string InstrucKey = "InstructionKey";
        public string SinglePaym = "SinglePayment";
        public string ISRBillId = "ISRBillerID";
        public string PaymBlock = "PaymentBlock";
        public string RefDetails = "ReferenceDetails";
        public string HousBnkBrn = "HouseBankBranch";
        public string OwnerIdNum = "OwnerIDNumber";
        public string PyBlckDesc = "PaymentBlockDescription";
        public string LetterNum = "TaxExemptionLetterNum";
        public string MaxAmount = "MaxAmountOfExemption";
        public string FromDate = "ExemptionValidityDateFrom";
        public string ToDate = "ExemptionValidityDateTo";
        public string ConnBP = "LinkedBusinessPartner";
        public string MltMthNum = "LastMultiReconciliationNum";
        public string DeferrTax = "DeferredTax";
        public string Equ = "Equalization";
        public string WTLiable = "SubjectToWithholdingTax";
        public string CrtfcateNO = "CertificateNumber";
        public string ExpireDate = "ExpirationDate";
        public string NINum = "NationalInsuranceNum";
        public string AccCritria = "AccrualCriteria";
        public string WTCode = "WTCode";
        public string Building = "BillToBuildingFloorRoom";
        public string DpmClear = "DownPaymentClearAct";
        public string ChannlBP = "ChannelBP";
        public string DfTcnician = "DefaultTechnician";
        public string BillToDef = "BilltoDefault";
        public string BoEDiscnt = "CustomerBillofExchangDisc";
        public string Territory = "Territory";
        public string MailBuildi = "ShipToBuildingFloorRoom";
        public string BoEPrsnt = "CustomerBillofExchangPres";
        public string ProjectCod = "ProjectCode";
        public string VatGroup = "VatGroupLatinAmerica";
        public string DunTerm = "DunningTerm";
        public string IntrntSite = "Website";
        public string OtrCtlAcct = "OtherReceivablePayable";
        public string BoEOnClct = "BillofExchangeonCollection";
        public string CmpPrivate = "CompanyPrivate";
        public string LangCode = "LanguageCode";
        public string UnpaidBoE = "UnpaidBillofExchange";
        public string DdgKey = "WithholdingTaxDeductionGroup";
        public string CDPNum = "ClosingDateProcedureNumber";
        public string Profession = "Profession";
        public string BCACode = "BankChargesAllocationCode";
        public string TaxRndRule = "TaxRoundingRule";
        public string QryGroup1 = "Properties1";
        public string QryGroup2 = "Properties2";
        public string QryGroup3 = "Properties3";
        public string QryGroup4 = "Properties4";
        public string QryGroup5 = "Properties5";
        public string QryGroup6 = "Properties6";
        public string QryGroup7 = "Properties7";
        public string QryGroup8 = "Properties8";
        public string QryGroup9 = "Properties9";
        public string QryGroup10 = "Properties10";
        public string QryGroup11 = "Properties11";
        public string QryGroup12 = "Properties12";
        public string QryGroup13 = "Properties13";
        public string QryGroup14 = "Properties14";
        public string QryGroup15 = "Properties15";
        public string QryGroup16 = "Properties16";
        public string QryGroup17 = "Properties17";
        public string QryGroup18 = "Properties18";
        public string QryGroup19 = "Properties19";
        public string QryGroup20 = "Properties20";
        public string QryGroup21 = "Properties21";
        public string QryGroup22 = "Properties22";
        public string QryGroup23 = "Properties23";
        public string QryGroup24 = "Properties24";
        public string QryGroup25 = "Properties25";
        public string QryGroup26 = "Properties26";
        public string QryGroup27 = "Properties27";
        public string QryGroup28 = "Properties28";
        public string QryGroup29 = "Properties29";
        public string QryGroup30 = "Properties30";
        public string QryGroup31 = "Properties31";
        public string QryGroup32 = "Properties32";
        public string QryGroup33 = "Properties33";
        public string QryGroup34 = "Properties34";
        public string QryGroup35 = "Properties35";
        public string QryGroup36 = "Properties36";
        public string QryGroup37 = "Properties37";
        public string QryGroup38 = "Properties38";
        public string QryGroup39 = "Properties39";
        public string QryGroup40 = "Properties40";
        public string QryGroup41 = "Properties41";
        public string QryGroup42 = "Properties42";
        public string QryGroup43 = "Properties43";
        public string QryGroup44 = "Properties44";
        public string QryGroup45 = "Properties45";
        public string QryGroup46 = "Properties46";
        public string QryGroup47 = "Properties47";
        public string QryGroup48 = "Properties48";
        public string QryGroup49 = "Properties49";
        public string QryGroup50 = "Properties50";
        public string QryGroup51 = "Properties51";
        public string QryGroup52 = "Properties52";
        public string QryGroup53 = "Properties53";
        public string QryGroup54 = "Properties54";
        public string QryGroup55 = "Properties55";
        public string QryGroup56 = "Properties56";
        public string QryGroup57 = "Properties57";
        public string QryGroup58 = "Properties58";
        public string QryGroup59 = "Properties59";
        public string QryGroup60 = "Properties60";
        public string QryGroup61 = "Properties61";
        public string QryGroup62 = "Properties62";
        public string QryGroup63 = "Properties63";
        public string QryGroup64 = "Properties64";
        public string RegNum = "CompanyRegistrationNumber";
        public string VerifNum = "VerificationNumber";
        public string DscntObjct = "DiscountBaseObject";
        public string DscntRel = "DiscountRelations";
        public string TypWTReprt = "TypeReport";
        public string ThreshOver = "ThresholdOverlook";
        public string SurOver = "SurchargeOverlook";
        public string DpmIntAct = "DownPaymentInterimAccount";
        public string OpCode347 = "OperationCode347";
        public string InsurOp347 = "InsuranceOperation347";
        public string HierchDdct = "HierarchicalDeduction";
        public string WHShaamGrp = "ShaamGroup";
        public string CertWHT = "WithholdingTaxCertified";
        public string CertBKeep = "BookkeepingCertified";
        public string PlngGroup = "PlanningGroup";
        public string Affiliate = "Affiliate";
        public string IndustryC = "Industry";
        public string VatIDNum = "VatIDNum";
        public string DatevAcct = "DatevAccount";
        public string DatevFirst = "DatevFirstDataEntry";
        public string GTSRegNum = "GTSRegNo";
        public string GTSBankAct = "GTSBankAccountNo";
        public string GTSBilAddr = "GTSBillingAddrTel";
        public string HsBnkIBAN = "U_Test";


        public override void Rlp(ref string tmp)
        {
            tmp = Trans(tmp, "CardCode", CardCode);
            tmp = Trans(tmp, "CardName", CardName);
            tmp = Trans(tmp, "CardType", CardType);
            tmp = Trans(tmp, "GroupCode", GroupCode);
            tmp = Trans(tmp, "Address", Address);
            tmp = Trans(tmp, "ZipCode", ZipCode);
            tmp = Trans(tmp, "MailAddres", MailAddres);
            tmp = Trans(tmp, "MailZipCod", MailZipCod);
            tmp = Trans(tmp, "Phone1", Phone1);
            tmp = Trans(tmp, "Phone2", Phone2);
            tmp = Trans(tmp, "Fax", Fax);
            tmp = Trans(tmp, "CntctPrsn", CntctPrsn);
            tmp = Trans(tmp, "Notes", Notes);
            tmp = Trans(tmp, "GroupNum", GroupNum);
            tmp = Trans(tmp, "CreditLine", CreditLine);
            tmp = Trans(tmp, "DebtLine", DebtLine);
            tmp = Trans(tmp, "Discount", Discount);
            tmp = Trans(tmp, "VatStatus", VatStatus);
            tmp = Trans(tmp, "LicTradNum", LicTradNum);
            tmp = Trans(tmp, "DdctStatus", DdctStatus);
            tmp = Trans(tmp, "DdctPrcnt", DdctPrcnt);
            tmp = Trans(tmp, "ValidUntil", ValidUntil);
            tmp = Trans(tmp, "ListNum", ListNum);
            tmp = Trans(tmp, "IntrstRate", IntrstRate);
            tmp = Trans(tmp, "Commission", Commission);
            tmp = Trans(tmp, "CommGrCode", CommGrCode);
            tmp = Trans(tmp, "Free_Text", Free_Text);
            tmp = Trans(tmp, "SlpCode", SlpCode);
            tmp = Trans(tmp, "Currency", Currency);
            tmp = Trans(tmp, "RateDifAct", RateDifAct);
            tmp = Trans(tmp, "Cellular", Cellular);
            tmp = Trans(tmp, "AvrageLate", AvrageLate);
            tmp = Trans(tmp, "City", City);
            tmp = Trans(tmp, "County", County);
            tmp = Trans(tmp, "Country", Country);
            tmp = Trans(tmp, "MailCity", MailCity);
            tmp = Trans(tmp, "MailCounty", MailCounty);
            tmp = Trans(tmp, "MailCountr", MailCountr);
            tmp = Trans(tmp, "E_Mail", E_Mail);
            tmp = Trans(tmp, "Picture", Picture);
            tmp = Trans(tmp, "DflAccount", DflAccount);
            tmp = Trans(tmp, "DflBranch", DflBranch);
            tmp = Trans(tmp, "BankCode", BankCode);
            tmp = Trans(tmp, "AddID", AddID);
            tmp = Trans(tmp, "Pager", Pager);
            tmp = Trans(tmp, "FatherCard", FatherCard);
            tmp = Trans(tmp, "CardFName", CardFName);
            tmp = Trans(tmp, "FatherType", FatherType);
            tmp = Trans(tmp, "DdctOffice", DdctOffice);
            tmp = Trans(tmp, "ExportCode", ExportCode);
            tmp = Trans(tmp, "MinIntrst", MinIntrst);
            tmp = Trans(tmp, "ECVatGroup", ECVatGroup);
            tmp = Trans(tmp, "ShipType", ShipType);
            tmp = Trans(tmp, "Password", Password);
            tmp = Trans(tmp, "Indicator", Indicator);
            tmp = Trans(tmp, "IBAN", IBAN);
            tmp = Trans(tmp, "CreditCard", CreditCard);
            tmp = Trans(tmp, "CrCardNum", CrCardNum);
            tmp = Trans(tmp, "CardValid", CardValid);
            tmp = Trans(tmp, "DebPayAcct", DebPayAcct);
            tmp = Trans(tmp, "validFor", validFor);
            tmp = Trans(tmp, "validFrom", validFrom);
            tmp = Trans(tmp, "validTo", validTo);
            tmp = Trans(tmp, "ValidComm", ValidComm);
            tmp = Trans(tmp, "frozenFor", frozenFor);
            tmp = Trans(tmp, "frozenFrom", frozenFrom);
            tmp = Trans(tmp, "frozenTo", frozenTo);
            tmp = Trans(tmp, "FrozenComm", FrozenComm);
            tmp = Trans(tmp, "Block", Block);
            tmp = Trans(tmp, "State1", State1);
            tmp = Trans(tmp, "ExemptNo", ExemptNo);
            tmp = Trans(tmp, "Priority", Priority);
            tmp = Trans(tmp, "FormCode", FormCode);
            tmp = Trans(tmp, "Box1099", Box1099);
            tmp = Trans(tmp, "PymCode", PymCode);
            tmp = Trans(tmp, "BackOrder", BackOrder);
            tmp = Trans(tmp, "PartDelivr", PartDelivr);
            tmp = Trans(tmp, "BlockDunn", BlockDunn);
            tmp = Trans(tmp, "BankCountr", BankCountr);
            tmp = Trans(tmp, "HouseBank", HouseBank);
            tmp = Trans(tmp, "HousBnkCry", HousBnkCry);
            tmp = Trans(tmp, "HousBnkAct", HousBnkAct);
            tmp = Trans(tmp, "ShipToDef", ShipToDef);
            tmp = Trans(tmp, "CollecAuth", CollecAuth);
            tmp = Trans(tmp, "DME", DME);
            tmp = Trans(tmp, "InstrucKey", InstrucKey);
            tmp = Trans(tmp, "SinglePaym", SinglePaym);
            tmp = Trans(tmp, "ISRBillId", ISRBillId);
            tmp = Trans(tmp, "PaymBlock", PaymBlock);
            tmp = Trans(tmp, "RefDetails", RefDetails);
            tmp = Trans(tmp, "HousBnkBrn", HousBnkBrn);
            tmp = Trans(tmp, "OwnerIdNum", OwnerIdNum);
            tmp = Trans(tmp, "PyBlckDesc", PyBlckDesc);
            tmp = Trans(tmp, "LetterNum", LetterNum);
            tmp = Trans(tmp, "MaxAmount", MaxAmount);
            tmp = Trans(tmp, "FromDate", FromDate);
            tmp = Trans(tmp, "ToDate", ToDate);
            tmp = Trans(tmp, "ConnBP", ConnBP);
            tmp = Trans(tmp, "MltMthNum", MltMthNum);
            tmp = Trans(tmp, "DeferrTax", DeferrTax);
            tmp = Trans(tmp, "Equ", Equ);
            tmp = Trans(tmp, "WTLiable", WTLiable);
            tmp = Trans(tmp, "CrtfcateNO", CrtfcateNO);
            tmp = Trans(tmp, "ExpireDate", ExpireDate);
            tmp = Trans(tmp, "NINum", NINum);
            tmp = Trans(tmp, "AccCritria", AccCritria);
            tmp = Trans(tmp, "WTCode", WTCode);
            tmp = Trans(tmp, "Building", Building);
            tmp = Trans(tmp, "DpmClear", DpmClear);
            tmp = Trans(tmp, "ChannlBP", ChannlBP);
            tmp = Trans(tmp, "DfTcnician", DfTcnician);
            tmp = Trans(tmp, "BillToDef", BillToDef);
            tmp = Trans(tmp, "BoEDiscnt", BoEDiscnt);
            tmp = Trans(tmp, "Territory", Territory);
            tmp = Trans(tmp, "MailBuildi", MailBuildi);
            tmp = Trans(tmp, "BoEPrsnt", BoEPrsnt);
            tmp = Trans(tmp, "ProjectCod", ProjectCod);
            tmp = Trans(tmp, "VatGroup", VatGroup);
            tmp = Trans(tmp, "DunTerm", DunTerm);
            tmp = Trans(tmp, "IntrntSite", IntrntSite);
            tmp = Trans(tmp, "OtrCtlAcct", OtrCtlAcct);
            tmp = Trans(tmp, "BoEOnClct", BoEOnClct);
            tmp = Trans(tmp, "CmpPrivate", CmpPrivate);
            tmp = Trans(tmp, "LangCode", LangCode);
            tmp = Trans(tmp, "UnpaidBoE", UnpaidBoE);
            tmp = Trans(tmp, "DdgKey", DdgKey);
            tmp = Trans(tmp, "CDPNum", CDPNum);
            tmp = Trans(tmp, "Profession", Profession);
            tmp = Trans(tmp, "BCACode", BCACode);
            tmp = Trans(tmp, "TaxRndRule", TaxRndRule);
            tmp = Trans(tmp, "QryGroup1", QryGroup1);
            tmp = Trans(tmp, "QryGroup2", QryGroup2);
            tmp = Trans(tmp, "QryGroup3", QryGroup3);
            tmp = Trans(tmp, "QryGroup4", QryGroup4);
            tmp = Trans(tmp, "QryGroup5", QryGroup5);
            tmp = Trans(tmp, "QryGroup6", QryGroup6);
            tmp = Trans(tmp, "QryGroup7", QryGroup7);
            tmp = Trans(tmp, "QryGroup8", QryGroup8);
            tmp = Trans(tmp, "QryGroup9", QryGroup9);
            tmp = Trans(tmp, "QryGroup10", QryGroup10);
            tmp = Trans(tmp, "QryGroup11", QryGroup11);
            tmp = Trans(tmp, "QryGroup12", QryGroup12);
            tmp = Trans(tmp, "QryGroup13", QryGroup13);
            tmp = Trans(tmp, "QryGroup14", QryGroup14);
            tmp = Trans(tmp, "QryGroup15", QryGroup15);
            tmp = Trans(tmp, "QryGroup16", QryGroup16);
            tmp = Trans(tmp, "QryGroup17", QryGroup17);
            tmp = Trans(tmp, "QryGroup18", QryGroup18);
            tmp = Trans(tmp, "QryGroup19", QryGroup19);
            tmp = Trans(tmp, "QryGroup20", QryGroup20);
            tmp = Trans(tmp, "QryGroup21", QryGroup21);
            tmp = Trans(tmp, "QryGroup22", QryGroup22);
            tmp = Trans(tmp, "QryGroup23", QryGroup23);
            tmp = Trans(tmp, "QryGroup24", QryGroup24);
            tmp = Trans(tmp, "QryGroup25", QryGroup25);
            tmp = Trans(tmp, "QryGroup26", QryGroup26);
            tmp = Trans(tmp, "QryGroup27", QryGroup27);
            tmp = Trans(tmp, "QryGroup28", QryGroup28);
            tmp = Trans(tmp, "QryGroup29", QryGroup29);
            tmp = Trans(tmp, "QryGroup30", QryGroup30);
            tmp = Trans(tmp, "QryGroup31", QryGroup31);
            tmp = Trans(tmp, "QryGroup32", QryGroup32);
            tmp = Trans(tmp, "QryGroup33", QryGroup33);
            tmp = Trans(tmp, "QryGroup34", QryGroup34);
            tmp = Trans(tmp, "QryGroup35", QryGroup35);
            tmp = Trans(tmp, "QryGroup36", QryGroup36);
            tmp = Trans(tmp, "QryGroup37", QryGroup37);
            tmp = Trans(tmp, "QryGroup38", QryGroup38);
            tmp = Trans(tmp, "QryGroup39", QryGroup39);
            tmp = Trans(tmp, "QryGroup40", QryGroup40);
            tmp = Trans(tmp, "QryGroup41", QryGroup41);
            tmp = Trans(tmp, "QryGroup42", QryGroup42);
            tmp = Trans(tmp, "QryGroup43", QryGroup43);
            tmp = Trans(tmp, "QryGroup44", QryGroup44);
            tmp = Trans(tmp, "QryGroup45", QryGroup45);
            tmp = Trans(tmp, "QryGroup46", QryGroup46);
            tmp = Trans(tmp, "QryGroup47", QryGroup47);
            tmp = Trans(tmp, "QryGroup48", QryGroup48);
            tmp = Trans(tmp, "QryGroup49", QryGroup49);
            tmp = Trans(tmp, "QryGroup50", QryGroup50);
            tmp = Trans(tmp, "QryGroup51", QryGroup51);
            tmp = Trans(tmp, "QryGroup52", QryGroup52);
            tmp = Trans(tmp, "QryGroup53", QryGroup53);
            tmp = Trans(tmp, "QryGroup54", QryGroup54);
            tmp = Trans(tmp, "QryGroup55", QryGroup55);
            tmp = Trans(tmp, "QryGroup56", QryGroup56);
            tmp = Trans(tmp, "QryGroup57", QryGroup57);
            tmp = Trans(tmp, "QryGroup58", QryGroup58);
            tmp = Trans(tmp, "QryGroup59", QryGroup59);
            tmp = Trans(tmp, "QryGroup60", QryGroup60);
            tmp = Trans(tmp, "QryGroup61", QryGroup61);
            tmp = Trans(tmp, "QryGroup62", QryGroup62);
            tmp = Trans(tmp, "QryGroup63", QryGroup63);
            tmp = Trans(tmp, "QryGroup64", QryGroup64);
            tmp = Trans(tmp, "RegNum", RegNum);
            tmp = Trans(tmp, "VerifNum", VerifNum);
            tmp = Trans(tmp, "DscntObjct", DscntObjct);
            tmp = Trans(tmp, "DscntRel", DscntRel);
            tmp = Trans(tmp, "TypWTReprt", TypWTReprt);
            tmp = Trans(tmp, "ThreshOver", ThreshOver);
            tmp = Trans(tmp, "SurOver", SurOver);
            tmp = Trans(tmp, "DpmIntAct", DpmIntAct);
            tmp = Trans(tmp, "OpCode347", OpCode347);
            tmp = Trans(tmp, "InsurOp347", InsurOp347);
            tmp = Trans(tmp, "HierchDdct", HierchDdct);
            tmp = Trans(tmp, "WHShaamGrp", WHShaamGrp);
            tmp = Trans(tmp, "CertWHT", CertWHT);
            tmp = Trans(tmp, "CertBKeep", CertBKeep);
            tmp = Trans(tmp, "PlngGroup", PlngGroup);
            tmp = Trans(tmp, "Affiliate", Affiliate);
            tmp = Trans(tmp, "IndustryC", IndustryC);
            tmp = Trans(tmp, "VatIDNum", VatIDNum);
            tmp = Trans(tmp, "DatevAcct", DatevAcct);
            tmp = Trans(tmp, "DatevFirst", DatevFirst);
            tmp = Trans(tmp, "GTSRegNum", GTSRegNum);
            tmp = Trans(tmp, "GTSBankAct", GTSBankAct);
            tmp = Trans(tmp, "GTSBilAddr", GTSBilAddr);
            tmp = Trans(tmp, "HsBnkIBAN", HsBnkIBAN);

           

        }
    }
}
